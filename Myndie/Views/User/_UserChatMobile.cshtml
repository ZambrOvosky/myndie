<link href="~/assets/css/chatmobile.css" rel="stylesheet" />

@if (Session["Id"] != null)
{

    <div class="chat-box fixed-positioning">
        <div class="chat-header">
          
        </div>
        <div class="chat-content">
            <div class="conteudo">
                <ul id="discussion"></ul>
            </div><br />
            <div class="myndie-input">
                <input type="text" id="message" placeholder="Send Messages...">
            </div>
            @*<input type="button" id="sendmessage" class="btn btn-lg" value="send">*@
            <div class="align-center">
                <button class="btn btn-lg" id="sendmessage">Send</button>
            </div>
            <div>
                <input type="hidden" id="displayname" />
            </div>
        </div>
    </div>
}
<script> var isOpen = true;</script>
<script type="text/javascript" src="~/assets/bower_components/jquery/dist/jquery.min.js"></script>

<!-- Init SignalR -->
<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
<script src="~/Scripts/JavaScript.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<script>
    let chatBox = document.querySelector(".chat-box");
    let toggleButton = document.querySelector(".chat-header button")
    let chatContent = document.querySelector(".chat-content");
    //toggleButton.addEventListener('click', () => {
    //    if (chatContent.style.maxHeight) {
    //        chatContent.style.maxHeight = null;
    //        chatContent.classList.remove('active');
    //        toggleButton.innerText = "Show"
    //        $('#smgs').text("");
    //        isOpen = false;
    //    } else {
    //        chatContent.style.maxHeight = 1080 + "px";
    //        chatContent.classList.add('active');
    //        toggleButton.innerText = "Hide";
    //        isOpen = true;
    //        $('#smgs').text("");
    //    }
    //})
    // Outside click
    window.addEventListener('click', function (e) {
        if (!chatBox.contains(e.target)) {
            chatContent.style.maxHeight = null;
            chatContent.classList.remove('active');
            toggleButton.innerText = "Show";
            isOpen = false;
            $('#smgs').text("");
        }
    });
    //(() => {
    //    chatContent.style.maxHeight = 1080 + "px";
    //    chatContent.classList.add('active');
    //    toggleButton.innerText = "Hide"
    //})();
    $(function () {
            var x = 50;
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<h4 class="m-0"><span class="a">' + htmlEncode(name) + ' : </span><p class="label label-default a" id="ab">' + htmlEncode(message) + '<br></span></h4><br>');
                var number = parseInt($('#smgs').text());
                if (isNaN(number)) {
                    number = 0;
                }
                if (htmlEncode(name) != $('#displayname').val && !isOpen) {
                    $('#smgs').text(number + 1);
                }
                if (isOpen) {
                    $("div").scrollTop(x);
                }

                x = x + 50;

            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val('@ViewBag.User.Username');
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.

            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {



                    $('#smgs').text("");
                        // Call the Send method on the hub.
                    if ($('#message').val() != "" && $('#message').val() != " ") {
                        chat.server.send($('#displayname').val(), $('#message').val());
                    }


                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                    });
                });
            });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        var input = document.getElementById("message");
        input.addEventListener("keyup", function (event) {
            event.preventDefault();
            if (event.keyCode === 13) {
                document.getElementById("sendmessage").click();
            }
        });

</script>
